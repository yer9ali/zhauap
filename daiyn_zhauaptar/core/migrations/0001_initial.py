# Generated by Django 3.2.15 on 2022-09-05 07:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('description', models.TextField(blank=True, max_length=10000, verbose_name='описание')),
                ('author', models.CharField(blank=True, max_length=100, verbose_name='автор')),
                ('publisher', models.CharField(blank=True, max_length=100, verbose_name='издатель')),
                ('clas', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='класс')),
                ('year_published', models.CharField(blank=True, default='', max_length=4, verbose_name='год публикации')),
                ('image', models.ImageField(blank=True, upload_to='content/', verbose_name='картинка')),
            ],
            options={
                'db_table': 'book',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('paid', models.BooleanField(default=False)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='UserBook',
            fields=[
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('book_id', models.ForeignKey(db_column='book_id', on_delete=django.db.models.deletion.CASCADE, to='core.book')),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_book',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('class_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('activation_date', models.DateTimeField(verbose_name='activation_date')),
                ('expiration_date', models.DateTimeField(verbose_name='expiration_date')),
                ('payment', models.ForeignKey(db_column='payment_id', on_delete=django.db.models.deletion.CASCADE, to='core.payment')),
                ('user_id', models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'subscription',
            },
        ),
        migrations.CreateModel(
            name='MainBooks',
            fields=[
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('photo', models.ImageField(blank=True, upload_to='content/', verbose_name='картинка')),
                ('book', models.OneToOneField(db_column='book_id', on_delete=django.db.models.deletion.CASCADE, to='core.book', verbose_name='книга')),
            ],
            options={
                'db_table': 'main_book',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('number', models.IntegerField(blank=True, verbose_name='номер ответа')),
                ('photo', models.ImageField(blank=True, upload_to='content/', verbose_name='картинка')),
                ('book', models.ForeignKey(db_column='book_id', on_delete=django.db.models.deletion.CASCADE, to='core.book', verbose_name='книга')),
            ],
            options={
                'db_table': 'answer',
            },
        ),
    ]
